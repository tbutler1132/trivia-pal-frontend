{"ast":null,"code":"var _jsxFileName = \"/Users/tim/Flatiron/code/Trivia/Mod4-Project-Frontend-1/client/src/Components/Question.js\";\nimport React from 'react';\nimport Answer from './Answer';\nimport { Button } from 'react-bootstrap';\n\nclass Question extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.shuffle = a => {\n      var j, x, i;\n\n      for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n      }\n\n      return a;\n    };\n\n    this.renderAnswers = () => {\n      if (this.props.question) {\n        let wrongAnswers = this.props.question.incorrect_answers.map((answer, index) => {\n          return /*#__PURE__*/React.createElement(Answer, {\n            key: index,\n            value: 0,\n            answer: answer,\n            nextQuestion: this.props.nextQuestion,\n            active: false,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 24\n            }\n          });\n        });\n        let rightAnswer = /*#__PURE__*/React.createElement(Answer, {\n          key: this.props.question.correct_answer,\n          value: 1,\n          answer: this.props.question.correct_answer,\n          nextQuestion: this.props.nextQuestion,\n          active: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 31\n          }\n        });\n        let answers = [...wrongAnswers, rightAnswer];\n        return this.shuffle(answers);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.question ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-1\",\n      id: \"question-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"question-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, this.props.question.question.replace(/&quot;|&#039;/gi, \"'\").replace(/&amp;/gi, \"&\")), this.renderAnswers()) : /*#__PURE__*/React.createElement(React.Fragment, null, this.props.history.push('/lobby')));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/tim/Flatiron/code/Trivia/Mod4-Project-Frontend-1/client/src/Components/Question.js"],"names":["React","Answer","Button","Question","Component","shuffle","a","j","x","i","length","Math","floor","random","renderAnswers","props","question","wrongAnswers","incorrect_answers","map","answer","index","nextQuestion","rightAnswer","correct_answer","answers","render","replace","history","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAEnCC,OAFmC,GAExBC,CAAD,IAAQ;AACd,UAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV;;AACA,WAAKA,CAAC,GAAGH,CAAC,CAACI,MAAF,GAAW,CAApB,EAAuBD,CAAC,GAAG,CAA3B,EAA8BA,CAAC,EAA/B,EAAmC;AAC/BF,QAAAA,CAAC,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAJ;AACAD,QAAAA,CAAC,GAAGF,CAAC,CAACG,CAAD,CAAL;AACAH,QAAAA,CAAC,CAACG,CAAD,CAAD,GAAOH,CAAC,CAACC,CAAD,CAAR;AACAD,QAAAA,CAAC,CAACC,CAAD,CAAD,GAAOC,CAAP;AACH;;AACD,aAAOF,CAAP;AACH,KAXkC;;AAAA,SAanCQ,aAbmC,GAanB,MAAM;AAClB,UAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AACrB,YAAIC,YAAY,GAAG,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,iBAApB,CAAsCC,GAAtC,CAA0C,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5E,8BAAO,oBAAC,MAAD;AAAQ,YAAA,GAAG,EAAEA,KAAb;AAAoB,YAAA,KAAK,EAAE,CAA3B;AAA8B,YAAA,MAAM,EAAED,MAAtC;AAA8C,YAAA,YAAY,EAAE,KAAKL,KAAL,CAAWO,YAAvE;AAAqF,YAAA,MAAM,EAAE,KAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,SAFkB,CAAnB;AAGA,YAAIC,WAAW,gBAAG,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAE,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,cAAjC;AAAiD,UAAA,KAAK,EAAE,CAAxD;AAA2D,UAAA,MAAM,EAAE,KAAKT,KAAL,CAAWC,QAAX,CAAoBQ,cAAvF;AAAuG,UAAA,YAAY,EAAE,KAAKT,KAAL,CAAWO,YAAhI;AAA8I,UAAA,MAAM,EAAE,KAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB;AACA,YAAIG,OAAO,GAAG,CAAC,GAAGR,YAAJ,EAAkBM,WAAlB,CAAd;AACA,eAAO,KAAKlB,OAAL,CAAaoB,OAAb,CAAP;AACH;AACJ,KAtBkC;AAAA;;AAyBnCC,EAAAA,MAAM,GAAG;AACL,wBACI,0CACK,KAAKX,KAAL,CAAWC,QAAX,gBACG;AAAK,MAAA,SAAS,EAAC,aAAf;AAA4B,MAAA,EAAE,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKD,KAAL,CAAWC,QAAX,CAAoBA,QAApB,CAA6BW,OAA7B,CAAqC,iBAArC,EAAwD,GAAxD,EAA6DA,OAA7D,CAAqE,SAArE,EAAgF,GAAhF,CAAhC,CADJ,EAEK,KAAKb,aAAL,EAFL,CADH,gBAMG,0CACK,KAAKC,KAAL,CAAWa,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CADL,CAPR,CADJ;AAcH;;AAxCkC;;AA2CvC,eAAe1B,QAAf","sourcesContent":["import React from 'react'\nimport Answer from './Answer'\nimport { Button } from 'react-bootstrap'\n\nclass Question extends React.Component {\n\n    shuffle = (a) =>  {\n        var j, x, i;\n        for (i = a.length - 1; i > 0; i--) {\n            j = Math.floor(Math.random() * (i + 1));\n            x = a[i];\n            a[i] = a[j];\n            a[j] = x;\n        }\n        return a;\n    }\n\n    renderAnswers = () => {\n        if (this.props.question) {\n            let wrongAnswers = this.props.question.incorrect_answers.map((answer, index) => {\n                return <Answer key={index} value={0} answer={answer} nextQuestion={this.props.nextQuestion} active={false} />\n            })\n            let rightAnswer = <Answer key={this.props.question.correct_answer} value={1} answer={this.props.question.correct_answer} nextQuestion={this.props.nextQuestion} active={false}/>\n            let answers = [...wrongAnswers, rightAnswer]\n            return this.shuffle(answers)\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n                {this.props.question ?\n                    <div className='container-1'id=\"question-div\">\n                        <h1 className=\"question-title\">{this.props.question.question.replace(/&quot;|&#039;/gi, \"'\").replace(/&amp;/gi, \"&\")}</h1>\n                        {this.renderAnswers()}\n                    </div>\n                    :\n                    <>\n                        {this.props.history.push('/lobby')}\n                    </>\n                }\n            </>\n        )\n    }\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}